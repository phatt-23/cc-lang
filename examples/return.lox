fun nested_return(a, b) {
    if (a > b) {
        print "doing a + b";
        {
            return a + b;
        }
    }
    
    {
        {
            {
                {
                    return 99;
                }
            }
        }
    }

    return a * b;
}

print "nested_return";
print nested_return(4, 5);
print nested_return(6, 5);


// recursive fibonacci, very expensive
fun fib(n) {
    if (n <= 1) return n;
    return fib(n - 2) + fib(n - 1);
}

// iterative fibonacci, very fast
fun fib_iter(n) {
    var a = 0;
    var temp;
    var b = 1;
    for (var i = 0; i < n; i = i + 1) {
        temp = a;
        a = b;
        b = b + temp;
    }
    return a;
}

print "fibonacci recursive";
for (var i = 0; i < 20; i = i + 1) {
    print fib(i);
}

print "fibonacci iterative";
for (var i = 0; i < 20; i = i + 1) {
    print fib_iter(i);
}

return;